"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
Component({
    options: {
        addGlobalClass: true,
    },
    data: {
        changeList: [],
        CustomBar: app.globalData.CustomBar,
        keyword: '',
        pageIndex: 1,
        pageSize: 10
    },
    methods: {
        search: function () {
            this.setData({ pageIndex: 1 });
            this.getList();
        },
        getList: function () {
            let that = this;
            app.func.post('/changeList', { pageIndex: this.data.pageIndex, pageSize: this.data.pageSize, keyword: this.data.keyword }, function (response) {
                if (response.status === 200) {
                    let list = JSON.parse(response.data);
                    list.forEach((item) => {
                        if (item.createdtime.slice(0, 10) === new Date().toISOString().slice(0, 10)) {
                            item.createdtime = "今天";
                        }
                        else
                            (item.createdtime < new Date());
                        {
                            item.createdtime = item.createdtime.slice(0, 10);
                        }
                    });
                    that.setData({ changeList: list });
                    wx.pageScrollTo({
                        scrollTop: 0,
                        duration: 150
                    });
                }
            });
        },
        keywordInput: function (e) {
            let keyword = e.detail.value;
            this.setData({ keyword: keyword });
        },
        nextPage: function () {
            let page = this.data.pageIndex + 1;
            this.setData({ pageIndex: page });
            this.getList();
        },
        lastPage: function () {
            let page = this.data.pageIndex;
            this.setData({ pageIndex: page-- });
            this.getList();
        }
    },
    lifetimes: {
        attached: function () {
            this.getList();
        },
        ready: function () {
            console.log(66);
        },
        moved: function () {
            console.log(55);
        },
        detached: function () {
        },
    },
    pageLifetimes: {
        show: function () {
            this.getList();
        },
        hide: function () {
            console.log('Component-1 pageLifetimes >> Hide');
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJLEdBQUcsR0FBRyxNQUFNLEVBQUUsQ0FBQTtBQUdsQixTQUFTLENBQUM7SUFDUixPQUFPLEVBQUU7UUFDUCxjQUFjLEVBQUUsSUFBSTtLQUNyQjtJQUNELElBQUksRUFBRTtRQUNKLFVBQVUsRUFBRyxFQUFFO1FBQ2YsU0FBUyxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsU0FBUztRQUNuQyxPQUFPLEVBQUMsRUFBRTtRQUNWLFNBQVMsRUFBQyxDQUFDO1FBQ1gsUUFBUSxFQUFDLEVBQUU7S0FDWjtJQUVELE9BQU8sRUFBRTtRQUNQLE1BQU0sRUFBQztZQUNMLElBQUksQ0FBQyxPQUFRLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztRQUNELE9BQU8sRUFBQztZQUNOLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztZQUNoQixHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRyxFQUFFLFVBQVUsUUFBaUI7Z0JBQ3JKLElBQUksUUFBUSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7b0JBRTNCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBUSxFQUFDLEVBQUU7d0JBSXZCLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRTs0QkFDM0UsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7eUJBQ3pCOzs0QkFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFBO3dCQUFDOzRCQUVyQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQzt5QkFDbEQ7b0JBQ0gsQ0FBQyxDQUFDLENBQUE7b0JBR0YsSUFBSSxDQUFDLE9BQVEsQ0FBQyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO29CQUNwQyxFQUFFLENBQUMsWUFBWSxDQUFDO3dCQUNkLFNBQVMsRUFBRSxDQUFDO3dCQUNaLFFBQVEsRUFBRSxHQUFHO3FCQUNkLENBQUMsQ0FBQTtpQkFDSDtZQUNILENBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQztRQUNELFlBQVksRUFBRSxVQUFVLENBQU07WUFDMUIsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDL0IsSUFBSSxDQUFDLE9BQVEsQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLENBQUM7UUFDRCxRQUFRLEVBQUM7WUFDUCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLE9BQVEsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1lBQ25DLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNqQixDQUFDO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDL0IsSUFBSSxDQUFDLE9BQVEsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLENBQUM7S0FDRjtJQUNELFNBQVMsRUFBRTtRQUVULFFBQVEsRUFBRTtZQUNSLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNqQixDQUFDO1FBQ0QsS0FBSyxFQUFFO1lBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNsQixDQUFDO1FBQ0QsS0FBSyxFQUFFO1lBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNqQixDQUFDO1FBQ0YsUUFBUSxFQUFFO1FBRVQsQ0FBQztLQUVIO0lBQ0QsYUFBYSxFQUFFO1FBRWIsSUFBSSxFQUFFO1lBQ0osSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLENBQUM7UUFDRCxJQUFJLEVBQUU7WUFDSixPQUFPLENBQUMsR0FBRyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7UUFDbkQsQ0FBQztLQUNGO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFnZXMvY2hhbmdlL2xpc3QvbGlzdC5qc1xyXG52YXIgYXBwID0gZ2V0QXBwKClcclxuLy9AdHMtaWdub3JlXHJcbmltcG9ydCBBcmtSZXNwID0gcmVxdWlyZSgnLi4vLi4vbW9kZWwvQXJrUmVzcC5qcycpO1xyXG5Db21wb25lbnQoe1xyXG4gIG9wdGlvbnM6IHtcclxuICAgIGFkZEdsb2JhbENsYXNzOiB0cnVlLFxyXG4gIH0sXHJcbiAgZGF0YToge1xyXG4gICAgY2hhbmdlTGlzdCA6IFtdLFxyXG4gICAgQ3VzdG9tQmFyOiBhcHAuZ2xvYmFsRGF0YS5DdXN0b21CYXIsXHJcbiAgICBrZXl3b3JkOicnLFxyXG4gICAgcGFnZUluZGV4OjEsXHJcbiAgICBwYWdlU2l6ZToxMFxyXG4gIH0sXHJcblxyXG4gIG1ldGhvZHM6IHtcclxuICAgIHNlYXJjaDpmdW5jdGlvbigpe1xyXG4gICAgICB0aGlzLnNldERhdGEhKHsgcGFnZUluZGV4OiAxIH0pO1xyXG4gICAgICB0aGlzLmdldExpc3QoKTtcclxuICAgIH0sXHJcbiAgICBnZXRMaXN0OmZ1bmN0aW9uKCl7XHJcbiAgICAgIGxldCB0aGF0ID0gdGhpcztcclxuICAgICAgYXBwLmZ1bmMucG9zdCgnL2NoYW5nZUxpc3QnLCB7IHBhZ2VJbmRleDogdGhpcy5kYXRhLnBhZ2VJbmRleCwgcGFnZVNpemU6IHRoaXMuZGF0YS5wYWdlU2l6ZSwga2V5d29yZDogdGhpcy5kYXRhLmtleXdvcmQgIH0sIGZ1bmN0aW9uIChyZXNwb25zZTogQXJrUmVzcCkge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xyXG5cclxuICAgICAgICAgIGxldCBsaXN0ID0gSlNPTi5wYXJzZShyZXNwb25zZS5kYXRhKTtcclxuICAgICAgICAgIGxpc3QuZm9yRWFjaCgoaXRlbTphbnkpPT57XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvL3ZhciBzdHIgPSAxNDA0MTcyODAwMDAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKGl0ZW0uY3JlYXRlZHRpbWUuc2xpY2UoMCwgMTApID09PSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApKSB7XHJcbiAgICAgICAgICAgICAgaXRlbS5jcmVhdGVkdGltZSA9IFwi5LuK5aSpXCI7XHJcbiAgICAgICAgICAgIH0gZWxzZSAoaXRlbS5jcmVhdGVkdGltZSA8IG5ldyBEYXRlKCkpIHtcclxuICAgICAgICAgICAgICAvL+S5i+WJjVxyXG4gICAgICAgICAgICAgIGl0ZW0uY3JlYXRlZHRpbWUgPSBpdGVtLmNyZWF0ZWR0aW1lLnNsaWNlKDAsIDEwKTsvLzIwMTQtMDctMDFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIFxyXG5cclxuICAgICAgICAgIHRoYXQuc2V0RGF0YSEoeyBjaGFuZ2VMaXN0OiBsaXN0IH0pO1xyXG4gICAgICAgICAgd3gucGFnZVNjcm9sbFRvKHtcclxuICAgICAgICAgICAgc2Nyb2xsVG9wOiAwLFxyXG4gICAgICAgICAgICBkdXJhdGlvbjogMTUwXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBrZXl3b3JkSW5wdXQ6IGZ1bmN0aW9uIChlOiBhbnkpe1xyXG4gICAgICAgIGxldCBrZXl3b3JkID0gZS5kZXRhaWwudmFsdWU7XHJcbiAgICAgIHRoaXMuc2V0RGF0YSEoeyBrZXl3b3JkOiBrZXl3b3JkIH0pO1xyXG4gICAgfSxcclxuICAgIG5leHRQYWdlOmZ1bmN0aW9uKCl7XHJcbiAgICAgIGxldCBwYWdlID0gdGhpcy5kYXRhLnBhZ2VJbmRleCsxO1xyXG4gICAgICB0aGlzLnNldERhdGEhKHsgcGFnZUluZGV4OiBwYWdlIH0pO1xyXG4gICAgICB0aGlzLmdldExpc3QoKTtcclxuICAgIH0sXHJcbiAgICBsYXN0UGFnZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICBsZXQgcGFnZSA9IHRoaXMuZGF0YS5wYWdlSW5kZXg7XHJcbiAgICAgIHRoaXMuc2V0RGF0YSEoeyBwYWdlSW5kZXg6IHBhZ2UtLSB9KTtcclxuICAgICAgdGhpcy5nZXRMaXN0KCk7XHJcbiAgICB9XHJcbiAgfSxcclxuICBsaWZldGltZXM6IHtcclxuICAgIC8vIOeUn+WRveWRqOacn+WHveaVsO+8jOWPr+S7peS4uuWHveaVsO+8jOaIluS4gOS4quWcqG1ldGhvZHPmrrXkuK3lrprkuYnnmoTmlrnms5XlkI1cclxuICAgIGF0dGFjaGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHRoaXMuZ2V0TGlzdCgpO1xyXG4gICAgfSxcclxuICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKDY2KTtcclxuICAgIH0sXHJcbiAgICBtb3ZlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICBjb25zb2xlLmxvZyg1NSk7XHJcbiAgICAgfSxcclxuICAgIGRldGFjaGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIFxyXG4gICAgIH0sXHJcbiAgICBcclxuICB9LFxyXG4gIHBhZ2VMaWZldGltZXM6IHtcclxuICAgIC8vIOe7hOS7tuaJgOWcqOmhtemdoueahOeUn+WRveWRqOacn+WjsOaYjuWvueixoe+8jOebruWJjeS7heaUr+aMgemhtemdoueahHNob3flkoxoaWRl5Lik5Liq55Sf5ZG95ZGo5pyfXHJcbiAgICBzaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHRoaXMuZ2V0TGlzdCgpO1xyXG4gICAgfSxcclxuICAgIGhpZGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgY29uc29sZS5sb2coJ0NvbXBvbmVudC0xIHBhZ2VMaWZldGltZXMgPj4gSGlkZScpO1xyXG4gICAgfVxyXG4gIH1cclxufSkiXX0=