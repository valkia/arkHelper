"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
Component({
    options: {
        addGlobalClass: true,
    },
    data: {
        changeList: [],
        CustomBar: app.globalData.CustomBar,
        keyword: '',
        pageIndex: 1,
        pageSize: 10
    },
    methods: {
        search: function () {
            this.setData({ pageIndex: 1 });
            this.getList();
        },
        getList: function () {
            let that = this;
            app.func.post('/changeList', { pageIndex: this.data.pageIndex, pageSize: this.data.pageSize, keyword: this.data.keyword }, function (response) {
                if (response.status === 200) {
                    let list = JSON.parse(response.data);
                    list.forEach((item) => {
                        if (item.createdtime.slice(0, 10) === new Date().toISOString().slice(0, 10)) {
                            item.createdtime = "今天";
                        }
                        else {
                            item.createdtime = item.createdtime.slice(0, 10);
                        }
                    });
                    that.setData({ changeList: list });
                    wx.pageScrollTo({
                        scrollTop: 0,
                        duration: 150
                    });
                }
            });
        },
        keywordInput: function (e) {
            let keyword = e.detail.value;
            this.setData({ keyword: keyword });
        },
        nextPage: function () {
            let page = this.data.pageIndex + 1;
            this.setData({ pageIndex: page });
            this.getList();
        },
        lastPage: function () {
            let page = this.data.pageIndex;
            this.setData({ pageIndex: page-- });
            this.getList();
        }
    },
    lifetimes: {
        attached: function () {
            this.getList();
        },
        ready: function () {
            console.log(66);
        },
        moved: function () {
            console.log(55);
        },
        detached: function () {
        },
    },
    pageLifetimes: {
        show: function () {
            this.getList();
        },
        hide: function () {
            console.log('Component-1 pageLifetimes >> Hide');
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJLEdBQUcsR0FBRyxNQUFNLEVBQUUsQ0FBQTtBQUdsQixTQUFTLENBQUM7SUFDUixPQUFPLEVBQUU7UUFDUCxjQUFjLEVBQUUsSUFBSTtLQUNyQjtJQUNELElBQUksRUFBRTtRQUNKLFVBQVUsRUFBRyxFQUFFO1FBQ2YsU0FBUyxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsU0FBUztRQUNuQyxPQUFPLEVBQUMsRUFBRTtRQUNWLFNBQVMsRUFBQyxDQUFDO1FBQ1gsUUFBUSxFQUFDLEVBQUU7S0FDWjtJQUVELE9BQU8sRUFBRTtRQUNQLE1BQU0sRUFBQztZQUNMLElBQUksQ0FBQyxPQUFRLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztRQUNELE9BQU8sRUFBQztZQUNOLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztZQUNoQixHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRyxFQUFFLFVBQVUsUUFBaUI7Z0JBQ3JKLElBQUksUUFBUSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7b0JBRTNCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBUSxFQUFDLEVBQUU7d0JBQ3ZCLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRTs0QkFDM0UsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7eUJBQ3pCOzZCQUFNOzRCQUNMLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO3lCQUNsRDtvQkFDSCxDQUFDLENBQUMsQ0FBQTtvQkFHRixJQUFJLENBQUMsT0FBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7b0JBQ3BDLEVBQUUsQ0FBQyxZQUFZLENBQUM7d0JBQ2QsU0FBUyxFQUFFLENBQUM7d0JBQ1osUUFBUSxFQUFFLEdBQUc7cUJBQ2QsQ0FBQyxDQUFBO2lCQUNIO1lBQ0gsQ0FBQyxDQUFDLENBQUE7UUFDSixDQUFDO1FBQ0QsWUFBWSxFQUFFLFVBQVUsQ0FBTTtZQUMxQixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUMvQixJQUFJLENBQUMsT0FBUSxDQUFDLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDdEMsQ0FBQztRQUNELFFBQVEsRUFBQztZQUNQLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFDLENBQUMsQ0FBQztZQUNqQyxJQUFJLENBQUMsT0FBUSxDQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7WUFDbkMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLENBQUM7UUFDRCxRQUFRLEVBQUU7WUFDUixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUMvQixJQUFJLENBQUMsT0FBUSxDQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztLQUNGO0lBQ0QsU0FBUyxFQUFFO1FBRVQsUUFBUSxFQUFFO1lBQ1IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLENBQUM7UUFDRCxLQUFLLEVBQUU7WUFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2xCLENBQUM7UUFDRCxLQUFLLEVBQUU7WUFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2pCLENBQUM7UUFDRixRQUFRLEVBQUU7UUFFVCxDQUFDO0tBRUg7SUFDRCxhQUFhLEVBQUU7UUFFYixJQUFJLEVBQUU7WUFDSixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztRQUNELElBQUksRUFBRTtZQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUMsQ0FBQztRQUNuRCxDQUFDO0tBQ0Y7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy9jaGFuZ2UvbGlzdC9saXN0LmpzXHJcbnZhciBhcHAgPSBnZXRBcHAoKVxyXG4vL0B0cy1pZ25vcmVcclxuaW1wb3J0IEFya1Jlc3AgPSByZXF1aXJlKCcuLi8uLi9tb2RlbC9BcmtSZXNwLmpzJyk7XHJcbkNvbXBvbmVudCh7XHJcbiAgb3B0aW9uczoge1xyXG4gICAgYWRkR2xvYmFsQ2xhc3M6IHRydWUsXHJcbiAgfSxcclxuICBkYXRhOiB7XHJcbiAgICBjaGFuZ2VMaXN0IDogW10sXHJcbiAgICBDdXN0b21CYXI6IGFwcC5nbG9iYWxEYXRhLkN1c3RvbUJhcixcclxuICAgIGtleXdvcmQ6JycsXHJcbiAgICBwYWdlSW5kZXg6MSxcclxuICAgIHBhZ2VTaXplOjEwXHJcbiAgfSxcclxuXHJcbiAgbWV0aG9kczoge1xyXG4gICAgc2VhcmNoOmZ1bmN0aW9uKCl7XHJcbiAgICAgIHRoaXMuc2V0RGF0YSEoeyBwYWdlSW5kZXg6IDEgfSk7XHJcbiAgICAgIHRoaXMuZ2V0TGlzdCgpO1xyXG4gICAgfSxcclxuICAgIGdldExpc3Q6ZnVuY3Rpb24oKXtcclxuICAgICAgbGV0IHRoYXQgPSB0aGlzO1xyXG4gICAgICBhcHAuZnVuYy5wb3N0KCcvY2hhbmdlTGlzdCcsIHsgcGFnZUluZGV4OiB0aGlzLmRhdGEucGFnZUluZGV4LCBwYWdlU2l6ZTogdGhpcy5kYXRhLnBhZ2VTaXplLCBrZXl3b3JkOiB0aGlzLmRhdGEua2V5d29yZCAgfSwgZnVuY3Rpb24gKHJlc3BvbnNlOiBBcmtSZXNwKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XHJcblxyXG4gICAgICAgICAgbGV0IGxpc3QgPSBKU09OLnBhcnNlKHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgICAgbGlzdC5mb3JFYWNoKChpdGVtOmFueSk9PntcclxuICAgICAgICAgICAgaWYgKGl0ZW0uY3JlYXRlZHRpbWUuc2xpY2UoMCwgMTApID09PSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApKSB7XHJcbiAgICAgICAgICAgICAgaXRlbS5jcmVhdGVkdGltZSA9IFwi5LuK5aSpXCI7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgaXRlbS5jcmVhdGVkdGltZSA9IGl0ZW0uY3JlYXRlZHRpbWUuc2xpY2UoMCwgMTApOy8vMjAxNC0wNy0wMVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgXHJcblxyXG4gICAgICAgICAgdGhhdC5zZXREYXRhISh7IGNoYW5nZUxpc3Q6IGxpc3QgfSk7XHJcbiAgICAgICAgICB3eC5wYWdlU2Nyb2xsVG8oe1xyXG4gICAgICAgICAgICBzY3JvbGxUb3A6IDAsXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxNTBcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgfSxcclxuICAgIGtleXdvcmRJbnB1dDogZnVuY3Rpb24gKGU6IGFueSl7XHJcbiAgICAgICAgbGV0IGtleXdvcmQgPSBlLmRldGFpbC52YWx1ZTtcclxuICAgICAgdGhpcy5zZXREYXRhISh7IGtleXdvcmQ6IGtleXdvcmQgfSk7XHJcbiAgICB9LFxyXG4gICAgbmV4dFBhZ2U6ZnVuY3Rpb24oKXtcclxuICAgICAgbGV0IHBhZ2UgPSB0aGlzLmRhdGEucGFnZUluZGV4KzE7XHJcbiAgICAgIHRoaXMuc2V0RGF0YSEoeyBwYWdlSW5kZXg6IHBhZ2UgfSk7XHJcbiAgICAgIHRoaXMuZ2V0TGlzdCgpO1xyXG4gICAgfSxcclxuICAgIGxhc3RQYWdlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGxldCBwYWdlID0gdGhpcy5kYXRhLnBhZ2VJbmRleDtcclxuICAgICAgdGhpcy5zZXREYXRhISh7IHBhZ2VJbmRleDogcGFnZS0tIH0pO1xyXG4gICAgICB0aGlzLmdldExpc3QoKTtcclxuICAgIH1cclxuICB9LFxyXG4gIGxpZmV0aW1lczoge1xyXG4gICAgLy8g55Sf5ZG95ZGo5pyf5Ye95pWw77yM5Y+v5Lul5Li65Ye95pWw77yM5oiW5LiA5Liq5ZyobWV0aG9kc+auteS4reWumuS5ieeahOaWueazleWQjVxyXG4gICAgYXR0YWNoZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdGhpcy5nZXRMaXN0KCk7XHJcbiAgICB9LFxyXG4gICAgcmVhZHk6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgY29uc29sZS5sb2coNjYpO1xyXG4gICAgfSxcclxuICAgIG1vdmVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKDU1KTtcclxuICAgICB9LFxyXG4gICAgZGV0YWNoZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgXHJcbiAgICAgfSxcclxuICAgIFxyXG4gIH0sXHJcbiAgcGFnZUxpZmV0aW1lczoge1xyXG4gICAgLy8g57uE5Lu25omA5Zyo6aG16Z2i55qE55Sf5ZG95ZGo5pyf5aOw5piO5a+56LGh77yM55uu5YmN5LuF5pSv5oyB6aG16Z2i55qEc2hvd+WSjGhpZGXkuKTkuKrnlJ/lkb3lkajmnJ9cclxuICAgIHNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdGhpcy5nZXRMaXN0KCk7XHJcbiAgICB9LFxyXG4gICAgaGlkZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICBjb25zb2xlLmxvZygnQ29tcG9uZW50LTEgcGFnZUxpZmV0aW1lcyA+PiBIaWRlJyk7XHJcbiAgICB9XHJcbiAgfVxyXG59KSJdfQ==