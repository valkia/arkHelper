"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
Component({
    options: {
        addGlobalClass: true,
    },
    data: {
        changeList: [],
        CustomBar: app.globalData.CustomBar,
        keyword: '',
        pageIndex: 1,
        pageSize: 10
    },
    methods: {
        getTimeAgo: function (dateTimeStamp) {
            let result = "";
            var minute = 1000 * 60;
            var hour = minute * 60;
            var day = hour * 24;
            var week = day * 7;
            var month = day * 30;
            var now = new Date().getTime();
            console.log(now);
            var diffValue = now - dateTimeStamp;
            if (diffValue < 0) {
                return;
            }
            var minC = diffValue / minute;
            var hourC = diffValue / hour;
            var dayC = diffValue / day;
            var weekC = diffValue / week;
            var monthC = diffValue / month;
            if (monthC >= 1 && monthC <= 3) {
                result = " " + parseInt(monthC.toString()) + "月前";
            }
            else if (weekC >= 1 && weekC <= 3) {
                result = " " + parseInt(weekC.toString()) + "周前";
            }
            else if (dayC >= 1 && dayC <= 6) {
                result = " " + parseInt(dayC.toString()) + "天前";
            }
            else if (hourC >= 1 && hourC <= 23) {
                result = " " + parseInt(hourC.toString()) + "小时前";
            }
            else if (minC >= 1 && minC <= 59) {
                result = " " + parseInt(minC.toString()) + "分钟前";
            }
            else if (diffValue >= 0 && diffValue <= minute) {
                result = "刚刚";
            }
            else {
                var datetime = new Date();
                datetime.setTime(dateTimeStamp);
                var Nyear = datetime.getFullYear();
                var Nmonth = datetime.getMonth() + 1 < 10 ? "0" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;
                var Ndate = datetime.getDate() < 10 ? "0" + datetime.getDate() : datetime.getDate();
                result = Nyear + "-" + Nmonth + "-" + Ndate;
            }
            return result;
        },
        search: function () {
            this.setData({ pageIndex: 1 });
            this.getList();
        },
        getList: function () {
            let that = this;
            app.func.post('/changeList', { pageIndex: this.data.pageIndex, pageSize: this.data.pageSize, keyword: this.data.keyword }, function (response) {
                if (response.status === 200) {
                    let list = response.data;
                    list.forEach((item) => {
                        item.createdtime = that.getTimeAgo(new Date(item.CreatedAt).getTime());
                    });
                    that.setData({ changeList: list });
                    wx.pageScrollTo({
                        scrollTop: 0,
                        duration: 150
                    });
                }
            });
        },
        keywordInput: function (e) {
            let keyword = e.detail.value;
            this.setData({ keyword: keyword });
        },
        nextPage: function () {
            let page = this.data.pageIndex + 1;
            this.setData({ pageIndex: page });
            this.getList();
        },
        lastPage: function () {
            let page = this.data.pageIndex;
            this.setData({ pageIndex: page-- });
            this.getList();
        },
        copyBtn: function (e) {
            wx.setClipboardData({
                data: e.target.dataset.name,
                success: function () {
                    wx.showToast({
                        title: '复制成功',
                    });
                }
            });
        }
    },
    lifetimes: {
        attached: function () {
            this.getList();
        },
        ready: function () {
        },
        moved: function () {
        },
        detached: function () {
        },
    },
    pageLifetimes: {
        show: function () {
            this.getList();
        },
        hide: function () {
            console.log('Component-1 pageLifetimes >> Hide');
        }
    }
});
//# sourceMappingURL=data:application/json;base64,