"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
var jsonData = require("/data.js");
var HeroBasic = (function () {
    function HeroBasic(name, type, level, img) {
        this.name = name;
        this.type = type;
        this.level = level;
        this.img = img;
    }
    return HeroBasic;
}());
Page({
    data: {
        CustomBar: app.globalData.CustomBar,
        tags: [
            {
                "cn": "资质",
                "cntags": [{ name: "新手", showFlag: false }, { name: "资深干员", showFlag: false }, { name: "高级资深干员", showFlag: false }]
            },
            {
                "cn": "位置",
                "cntags": [{ name: "远程位", showFlag: false }, { name: "近战位", showFlag: false }]
            },
            {
                "cn": "性别",
                "cntags": [{ name: "男性干员", showFlag: false }, { name: "女性干员", showFlag: false }]
            },
            {
                "cn": "种类",
                "cntags": [{ name: "先锋干员", showFlag: false }, { name: "狙击干员", showFlag: false }, { name: "医疗干员", showFlag: false }, { name: "术师干员", showFlag: false }, { name: "近卫干员", showFlag: false }, { name: "重装干员", showFlag: false }, { name: "辅助干员", showFlag: false }, { name: "特种干员", showFlag: false }]
            },
            {
                "cn": "词缀",
                "cntags": [{ name: "治疗", showFlag: false }, { name: "支援", showFlag: false }, { name: "输出", showFlag: false }, { name: "群攻", showFlag: false }, { name: "减速", showFlag: false }, { name: "生存", showFlag: false }, { name: "防护", showFlag: false }, { name: "削弱", showFlag: false }, { name: "位移", showFlag: false }, { name: "控场", showFlag: false }, { name: "爆发", showFlag: false }, { name: "召唤", showFlag: false }, { name: "快速复活", showFlag: false }, { name: "费用回复", showFlag: false }]
            }
        ],
        tags_aval: {},
        checkedTags: [],
        checkedTagsTL: [],
        possible: [],
        optStars: [],
        showStars: [{ name: "清空", showFlag: true }, { name: "6", showFlag: true }, { name: "5", showFlag: true }, { name: "4", showFlag: true }, { name: "3", showFlag: true }, { name: "2", showFlag: true }, { name: "1", showFlag: true }],
        keywords: ""
    },
    onLoad: function () {
        this.init();
    },
    search: function (e) {
        var _this = this;
        var keyword = e.detail.value;
        var keyArray = keyword.split(/\s+/);
        var that = this;
        this.data.tags.forEach(function (t) {
            t['cntags'].forEach(function (t2) {
                if (t2.showFlag === true) {
                    t2.showFlag = false;
                }
            });
        });
        that.setData({
            checkedTags: [],
            tags: this.data.tags,
            keywords: keyword
        });
        if (keyArray.length === 0)
            that.calc();
        keyArray.forEach(function (key) {
            var times = 0;
            var result = "";
            _this.data.tags.forEach(function (t) {
                t['cntags'].forEach(function (t2) {
                    if (t2.name.includes(key)) {
                        times++;
                        result = t2.name;
                    }
                });
            });
            if (times === 1) {
                console.log(result);
                that.clickTagF(result, false);
            }
        });
    },
    clean: function () {
        this.data.tags.forEach(function (t) {
            t['cntags'].forEach(function (t2) {
                if (t2.showFlag === true) {
                    t2.showFlag = false;
                }
            });
        });
        this.setData({
            checkedTags: [],
            tags: this.data.tags,
            keywords: []
        });
        this.calc();
    },
    clickStars: function (event) {
        console.log(event);
        var value = event.target.dataset.title;
        if (value === '清空') {
            this.data.showStars.forEach(function (s) {
                s.showFlag = false;
            });
            this.data.showStars[0] = { name: "全选", showFlag: true };
            this.setData({ optStars: [], showStars: this.data.showStars });
        }
        if (value === '全选') {
            this.data.showStars.forEach(function (s) {
                s.showFlag = true;
            });
            this.data.showStars[0] = { name: "清空", showFlag: true };
            this.setData({ optStars: ['清空', '6', '5', '4', '3', '2', '1'], showStars: this.data.showStars });
        }
        else {
            this.data.showStars.forEach(function (s) {
                if (s.name === value) {
                    s.showFlag = !s.showFlag;
                }
            });
            if (this.data.optStars.includes(value)) {
                this.data.optStars = this.data.optStars.filter(function (v, _, __) {
                    return v !== value;
                });
            }
            else {
                this.data.optStars.push(value);
            }
            this.setData({ optStars: this.data.optStars, showStars: this.data.showStars });
        }
        this.calc();
    },
    bindViewTap: function () {
        wx.navigateTo({
            url: '../index/index'
        });
    },
    calc: function () {
        var len = this.data.checkedTags.length;
        var count = Math.pow(2, this.data.checkedTags.length);
        var combs = [];
        for (var i = 0; i < count; i++) {
            var ts = [];
            var tsTL = [];
            for (var j = 0, mask = 1; j < len; j++) {
                if ((i & mask) !== 0) {
                    ts.push(this.data.checkedTags[j]);
                    tsTL.push(this.data.checkedTagsTL[j]);
                }
                mask = mask * 2;
            }
            combs.push({
                "tags": ts,
                "tagsTL": tsTL,
                "score": 0.0,
                "possible": []
            });
        }
        var optStars = this.data.optStars;
        var that = this;
        combs.forEach(function (comb) {
            var tags = comb.tags;
            if (tags.length === 0 || tags.length > 3)
                return;
            var chars = that.data.tags_aval[tags[0]].slice();
            var _loop_1 = function (i) {
                var reduced_chars = [];
                chars.forEach(function (char) {
                    var tmp = that.data.tags_aval[tags[i]];
                    tmp.forEach(function (tgch) {
                        if (char.name === tgch.name) {
                            reduced_chars.push(char);
                            return false;
                        }
                    });
                });
                chars = reduced_chars;
            };
            for (var i = 1; i < tags.length; i++) {
                _loop_1(i);
            }
            if (chars.length === 0)
                return;
            if (!tags.includes("高级资深干员")) {
                var reduce6_1 = [];
                chars.forEach(function (char) {
                    if (char.level !== 6) {
                        reduce6_1.push(char);
                    }
                });
                chars = reduce6_1;
            }
            var filtered_chars = [];
            chars.forEach(function (char) {
                if (optStars.includes(char.level.toString())) {
                    filtered_chars.push(char);
                }
            });
            chars = filtered_chars;
            comb.possible = chars;
            if (chars.length === 0)
                return;
            var s = 0;
            chars.forEach(function (char) {
                s += char.level;
            });
            s = s / chars.length;
            comb.score = s + 0.1 / tags.length + 0.9 / chars.length;
        });
        combs.sort(function (a, b) {
            return a.score > b.score ? -1 : (a.score < b.score ? 1 :
                (a.tags.length > b.tags.length ? 1 : (a.tags.length < b.tags.length ? -1 :
                    0)));
        });
        combs.forEach(function (comb) {
            if (!comb.possible || comb.possible.length === 0)
                return false;
            comb.possible.sort(function (a, b) {
                return a.level > b.level ? -1 : (a.level < b.level ? 1 : 0);
            });
        });
        that.setData({ possible: combs });
    },
    init: function () {
        var _that = this;
        this.setData({ optStars: ['清空', '6', '5', '4', '3', '2', '1'] });
        this.setData({ tags_aval: jsonData.aval });
        _that.calc();
    },
    clickTag: function (event) {
        console.log(event);
        var tag = event.target.dataset.title;
        this.clickTagF(tag, true);
    },
    clickTagF: function (tag, clickFlag) {
        var _that = this;
        var checked = false;
        if (!clickFlag) {
            this.data.tags.forEach(function (t) {
                t['cntags'].forEach(function (t2) {
                    if (t2.name === tag && t2.showFlag === false) {
                        t2.showFlag = true;
                    }
                });
            });
        }
        else {
            this.data.tags.forEach(function (t) {
                t['cntags'].forEach(function (t2) {
                    if (t2.name === tag) {
                        t2.showFlag = !t2.showFlag;
                    }
                });
            });
        }
        if ((_that.data.checkedTags).includes(tag)) {
            checked = true;
        }
        if (checked) {
            if (clickFlag) {
                _that.data.checkedTags = _that.data.checkedTags.filter(function (v, _, __) {
                    return v !== tag;
                });
                _that.setData({
                    checkedTags: _that.data.checkedTags
                });
            }
        }
        else {
            if (_that.data.checkedTags.length >= 6) {
                wx.showToast({
                    title: "无法选择更多标签：最多6个。",
                    icon: "none",
                    duration: 2000
                });
                return;
            }
            else {
                _that.data.checkedTags.push(tag);
                _that.setData({
                    checkedTags: _that.data.checkedTags
                });
            }
        }
        _that.setData({ tags: _that.data.tags });
        _that.calc();
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRhZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJLEdBQUcsR0FBRyxNQUFNLEVBQUUsQ0FBQTtBQUVsQixtQ0FBc0M7QUFFdEM7SUFNRSxtQkFBWSxJQUFZLEVBQUUsSUFBWSxFQUFFLEtBQWEsRUFBRSxHQUFXO1FBQ2hFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ2pCLENBQUM7SUFFSCxnQkFBQztBQUFELENBQUMsQUFiRCxJQWFDO0FBeUJELElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUVKLFNBQVMsRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLFNBQVM7UUFDbkMsSUFBSSxFQUFFO1lBQ0o7Z0JBQ0UsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsUUFBUSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDcEg7WUFDRDtnQkFDRSxJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDL0U7WUFDRDtnQkFDRSxJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDakY7WUFDRDtnQkFDRSxJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFFblM7WUFDRDtnQkFDRSxJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDN2Q7U0FDRjtRQUNELFNBQVMsRUFBTyxFQUFFO1FBQ2xCLFdBQVcsRUFBTyxFQUFFO1FBQ3BCLGFBQWEsRUFBTyxFQUFFO1FBQ3RCLFFBQVEsRUFBTyxFQUFFO1FBQ2pCLFFBQVEsRUFBTyxFQUFFO1FBQ2pCLFNBQVMsRUFBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDMU8sUUFBUSxFQUFFLEVBQUU7S0FFYjtJQUVELE1BQU07UUFP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SyxDQUFDLE9BQVEsQ0FBQztvQkFDYixXQUFXLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXO2lCQUNwQyxDQUFDLENBQUM7YUFDSjtTQUNGO2FBQU07WUFDTCxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7Z0JBRXRDLEVBQUUsQ0FBQyxTQUFTLENBQUM7b0JBQ1gsS0FBSyxFQUFFLGdCQUFnQjtvQkFDdkIsSUFBSSxFQUFFLE1BQU07b0JBQ1osUUFBUSxFQUFFLElBQUk7aUJBQ2YsQ0FBQyxDQUFBO2dCQUdGLE9BQU87YUFDUjtpQkFBTTtnQkFFTCxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2pDLEtBQUssQ0FBQyxPQUFRLENBQUM7b0JBQ2IsV0FBVyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVztpQkFDcEMsQ0FBQyxDQUFDO2FBRUo7U0FDRjtRQUNELEtBQUssQ0FBQyxPQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBRzFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUdmLENBQUM7Q0FFRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvL3RhZ3MuanNcclxudmFyIGFwcCA9IGdldEFwcCgpXHJcbi8vQHRzLWlnbm9yZVxyXG5pbXBvcnQganNvbkRhdGEgPSByZXF1aXJlKCcvZGF0YS5qcycpO1xyXG5cclxuY2xhc3MgSGVyb0Jhc2ljIHtcclxuICBuYW1lPzogc3RyaW5nO1xyXG4gIHR5cGU/OiBzdHJpbmc7XHJcbiAgbGV2ZWw/OiBudW1iZXI7XHJcbiAgaW1nPzogc3RyaW5nXHJcblxyXG4gIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgdHlwZTogc3RyaW5nLCBsZXZlbDogbnVtYmVyLCBpbWc6IHN0cmluZykge1xyXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgIHRoaXMudHlwZSA9IHR5cGU7XHJcbiAgICB0aGlzLmxldmVsID0gbGV2ZWw7XHJcbiAgICB0aGlzLmltZyA9IGltZztcclxuICB9XHJcblxyXG59XHJcblxyXG4vLyBjbGFzcyBIZXJvIGV4dGVuZHMgSGVyb0Jhc2ljIHtcclxuLy8gICBjYW1wPzogc3RyaW5nO1xyXG4vLyAgIHNleD86IHN0cmluZztcclxuLy8gICBjaGFyYWN0ZXJpc3RpYz86IHN0cmluZztcclxuLy8gICB0YWdzPzogc3RyaW5nW107XHJcbi8vICAgaGlkZGVuPzogYm9vbGVhbjtcclxuLy8gICBcIm5hbWUtZW5cIj86IHN0cmluZztcclxuXHJcblxyXG4vLyAgIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgY2FtcDogc3RyaW5nLCB0eXBlOiBzdHJpbmcsIGxldmVsOiBudW1iZXIsIHNleDogc3RyaW5nLCBjaGFyYWN0ZXJpc3RpYzogc3RyaW5nLCB0YWdzOiBbXSwgaGlkZGVuOiBib29sZWFuLCBuYW1lX2VuOiBzdHJpbmcsIGltZzogc3RyaW5nKSB7XHJcbi8vICAgICBzdXBlcihuYW1lLCB0eXBlLCBsZXZlbCwgaW1nKTtcclxuLy8gICAgIHRoaXMuY2FtcCA9IGNhbXA7XHJcbi8vICAgICB0aGlzLnNleCA9IHNleDtcclxuLy8gICAgIHRoaXMuY2hhcmFjdGVyaXN0aWMgPSBjaGFyYWN0ZXJpc3RpYztcclxuLy8gICAgIHRoaXMudGFncyA9IHRhZ3M7XHJcbi8vICAgICB0aGlzLmhpZGRlbiA9IGhpZGRlbjtcclxuLy8gICAgIHRoaXNbXCJuYW1lLWVuXCJdID0gbmFtZV9lbjtcclxuXHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG5cclxuXHJcblBhZ2Uoe1xyXG4gIGRhdGE6IHtcclxuICAgIC8vQHRzLWlnbm9yZSBcclxuICAgIEN1c3RvbUJhcjogYXBwLmdsb2JhbERhdGEuQ3VzdG9tQmFyLFxyXG4gICAgdGFnczogW1xyXG4gICAgICB7XHJcbiAgICAgICAgXCJjblwiOiBcIui1hOi0qFwiLFxyXG4gICAgICAgIFwiY250YWdzXCI6IFt7IG5hbWU6IFwi5paw5omLXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi6LWE5rex5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi6auY57qn6LWE5rex5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9XVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgXCJjblwiOiBcIuS9jee9rlwiLFxyXG4gICAgICAgIFwiY250YWdzXCI6IFt7IG5hbWU6IFwi6L+c56iL5L2NXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi6L+R5oiY5L2NXCIsIHNob3dGbGFnOiBmYWxzZSB9XVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgXCJjblwiOiBcIuaAp+WIq1wiLFxyXG4gICAgICAgIFwiY250YWdzXCI6IFt7IG5hbWU6IFwi55S35oCn5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi5aWz5oCn5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9XVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgXCJjblwiOiBcIuenjeexu1wiLFxyXG4gICAgICAgIFwiY250YWdzXCI6IFt7IG5hbWU6IFwi5YWI6ZSL5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi54uZ5Ye75bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi5Yy755aX5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi5pyv5biI5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi6L+R5Y2r5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi6YeN6KOF5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi6L6F5Yqp5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9LCB7IG5hbWU6IFwi54m556eN5bmy5ZGYXCIsIHNob3dGbGFnOiBmYWxzZSB9XVxyXG5cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIFwiY25cIjogXCLor43nvIBcIixcclxuICAgICAgICBcImNudGFnc1wiOiBbeyBuYW1lOiBcIuayu+eWl1wiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuaUr+aPtFwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIui+k+WHulwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIue+pOaUu1wiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuWHj+mAn1wiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIueUn+WtmFwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIumYsuaKpFwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuWJiuW8sVwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuS9jeenu1wiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuaOp+WculwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIueIhuWPkVwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuWPrOWUpFwiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIuW/q+mAn+Wkjea0u1wiLCBzaG93RmxhZzogZmFsc2UgfSwgeyBuYW1lOiBcIui0ueeUqOWbnuWkjVwiLCBzaG93RmxhZzogZmFsc2UgfV1cclxuICAgICAgfVxyXG4gICAgXSxcclxuICAgIHRhZ3NfYXZhbDoge30gPSB7fSxcclxuICAgIGNoZWNrZWRUYWdzOiBbXSA9IFtdLFxyXG4gICAgY2hlY2tlZFRhZ3NUTDogW10gPSBbXSxcclxuICAgIHBvc3NpYmxlOiBbXSA9IFtdLFxyXG4gICAgb3B0U3RhcnM6IFtdID0gW10sXHJcbiAgICBzaG93U3RhcnM6IFtdID0gW3sgbmFtZTogXCLmuIXnqbpcIiwgc2hvd0ZsYWc6IHRydWUgfSwgeyBuYW1lOiBcIjZcIiwgc2hvd0ZsYWc6IHRydWUgfSwgeyBuYW1lOiBcIjVcIiwgc2hvd0ZsYWc6IHRydWUgfSwgeyBuYW1lOiBcIjRcIiwgc2hvd0ZsYWc6IHRydWUgfSwgeyBuYW1lOiBcIjNcIiwgc2hvd0ZsYWc6IHRydWUgfSwgeyBuYW1lOiBcIjJcIiwgc2hvd0ZsYWc6IHRydWUgfSwgeyBuYW1lOiBcIjFcIiwgc2hvd0ZsYWc6IHRydWUgfV0sXHJcbiAgICBrZXl3b3JkczogXCJcIlxyXG5cclxuICB9LFxyXG5cclxuICBvbkxvYWQoKSB7XHJcbiAgICAvLyB0aGlzLnNldERhdGEhKHtcclxuICAgIC8vICAgbG9nczogKHd4LmdldFN0b3JhZ2VTeW5jKCdsb2dzJykgfHwgW10pLm1hcCgobG9nOiBudW1iZXIpID0+IHtcclxuICAgIC8vICAgICByZXR1cm4gZm9ybWF0VGltZShuZXcgRGF0ZShsb2cpKVxyXG4gICAgLy8gICB9KVxyXG4gICAgLy8gfSlcclxuXHJcbiAgICB0aGlzLmluaXQoKTtcclxuXHJcbiAgfSxcclxuXHJcbiAgc2VhcmNoKGU6YW55KSB7XHJcbiAgICBsZXQga2V5d29yZCA9IGUuZGV0YWlsLnZhbHVlO1xyXG4gICAgbGV0IGtleUFycmF5OiBbXSA9IGtleXdvcmQuc3BsaXQoL1xccysvKTtcclxuXHJcblxyXG4gICAgbGV0IHRoYXQgPSB0aGlzO1xyXG5cclxuICAgIHRoaXMuZGF0YS50YWdzLmZvckVhY2goKHQ6IGFueSkgPT4ge1xyXG4gICAgICB0WydjbnRhZ3MnXS5mb3JFYWNoKCh0MjogYW55KSA9PiB7XHJcbiAgICAgICAgaWYgKHQyLnNob3dGbGFnID09PSB0cnVlKSB7XHJcbiAgICAgICAgICB0Mi5zaG93RmxhZyA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgdGhhdC5zZXREYXRhISh7XHJcbiAgICAgIGNoZWNrZWRUYWdzOiBbXSxcclxuICAgICAgdGFnczogdGhpcy5kYXRhLnRhZ3MsXHJcbiAgICAgIGtleXdvcmRzOiBrZXl3b3JkXHJcbiAgICB9KTtcclxuXHJcbmlmKGtleUFycmF5Lmxlbmd0aD09PTApIHRoYXQuY2FsYygpO1xyXG5cclxuXHJcbiAgICBrZXlBcnJheS5mb3JFYWNoKGtleSA9PiB7XHJcblxyXG4gICAgICBsZXQgdGltZXMgPSAwO1xyXG4gICAgICBsZXQgcmVzdWx0ID0gXCJcIjtcclxuICAgICAgdGhpcy5kYXRhLnRhZ3MuZm9yRWFjaCgodDogYW55KSA9PiB7XHJcblxyXG4gICAgICAgIHRbJ2NudGFncyddLmZvckVhY2goKHQyOiBhbnkpID0+IHtcclxuICAgICAgICAgIGlmICh0Mi5uYW1lLmluY2x1ZGVzKGtleSkpIHtcclxuICAgICAgICAgICAgdGltZXMrK1xyXG4gICAgICAgICAgICByZXN1bHQgPSB0Mi5uYW1lO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgICBpZiAodGltZXMgPT09IDEpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgICAgIHRoYXQuY2xpY2tUYWdGKHJlc3VsdCwgZmFsc2UpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfSlcclxuICB9LFxyXG5cclxuICBjbGVhbigpe1xyXG4gICAgdGhpcy5kYXRhLnRhZ3MuZm9yRWFjaCgodDogYW55KSA9PiB7XHJcbiAgICAgIHRbJ2NudGFncyddLmZvckVhY2goKHQyOiBhbnkpID0+IHtcclxuICAgICAgICBpZiAodDIuc2hvd0ZsYWcgPT09IHRydWUpIHtcclxuICAgICAgICAgIHQyLnNob3dGbGFnID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICB0aGlzLnNldERhdGEhKHtcclxuICAgICAgY2hlY2tlZFRhZ3M6IFtdLFxyXG4gICAgICB0YWdzOiB0aGlzLmRhdGEudGFncyxcclxuICAgICAga2V5d29yZHM6W11cclxuICAgIH0pO1xyXG4gICAgdGhpcy5jYWxjKCk7XHJcbiAgfSxcclxuXHJcbiAgY2xpY2tTdGFycyhldmVudDogYW55KSB7XHJcbiAgICBjb25zb2xlLmxvZyhldmVudCk7XHJcbiAgICBsZXQgdmFsdWUgPSBldmVudC50YXJnZXQuZGF0YXNldC50aXRsZTtcclxuICAgIGlmICh2YWx1ZSA9PT0gJ+a4heepuicpIHtcclxuICAgICAgdGhpcy5kYXRhLnNob3dTdGFycy5mb3JFYWNoKChzOiBhbnkpID0+IHtcclxuXHJcbiAgICAgICAgcy5zaG93RmxhZyA9IGZhbHNlO1xyXG5cclxuICAgICAgfSlcclxuICAgICAgdGhpcy5kYXRhLnNob3dTdGFyc1swXSA9IHsgbmFtZTogXCLlhajpgIlcIiwgc2hvd0ZsYWc6IHRydWUgfTtcclxuICAgICAgdGhpcy5zZXREYXRhISh7IG9wdFN0YXJzOiBbXSwgc2hvd1N0YXJzOiB0aGlzLmRhdGEuc2hvd1N0YXJzIH0pO1xyXG4gICAgfVxyXG4gICAgaWYgKHZhbHVlID09PSAn5YWo6YCJJykge1xyXG4gICAgICB0aGlzLmRhdGEuc2hvd1N0YXJzLmZvckVhY2goKHM6IGFueSkgPT4ge1xyXG5cclxuICAgICAgICBzLnNob3dGbGFnID0gdHJ1ZTtcclxuXHJcbiAgICAgIH0pXHJcbiAgICAgIHRoaXMuZGF0YS5zaG93U3RhcnNbMF0gPSB7IG5hbWU6IFwi5riF56m6XCIsIHNob3dGbGFnOiB0cnVlIH07XHJcbiAgICAgIHRoaXMuc2V0RGF0YSEoeyBvcHRTdGFyczogWyfmuIXnqbonLCAnNicsICc1JywgJzQnLCAnMycsICcyJywgJzEnXSwgc2hvd1N0YXJzOiB0aGlzLmRhdGEuc2hvd1N0YXJzIH0pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcblxyXG4gICAgICB0aGlzLmRhdGEuc2hvd1N0YXJzLmZvckVhY2goKHM6IGFueSkgPT4ge1xyXG4gICAgICAgIGlmIChzLm5hbWUgPT09IHZhbHVlKSB7XHJcbiAgICAgICAgICBzLnNob3dGbGFnID0gIXMuc2hvd0ZsYWc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4vL0B0cy1pZ25vcmVcclxuICAgICAgaWYgKHRoaXMuZGF0YS5vcHRTdGFycy5pbmNsdWRlcyh2YWx1ZSkpIHtcclxuICAgICAgICB0aGlzLmRhdGEub3B0U3RhcnMgPSB0aGlzLmRhdGEub3B0U3RhcnMuZmlsdGVyKGZ1bmN0aW9uICh2LCBfLCBfXykge1xyXG4gICAgICAgICAgcmV0dXJuIHYgIT09IHZhbHVlO1xyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy9AdHMtaWdub3JlXHJcbiAgICAgICAgdGhpcy5kYXRhLm9wdFN0YXJzLnB1c2godmFsdWUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnNldERhdGEhKHsgb3B0U3RhcnM6IHRoaXMuZGF0YS5vcHRTdGFycywgc2hvd1N0YXJzOiB0aGlzLmRhdGEuc2hvd1N0YXJzIH0pO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jYWxjKCk7XHJcbiAgfSxcclxuXHJcbiAgYmluZFZpZXdUYXAoKSB7XHJcbiAgICB3eC5uYXZpZ2F0ZVRvKHtcclxuICAgICAgdXJsOiAnLi4vaW5kZXgvaW5kZXgnXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIGNhbGMoKSB7XHJcblxyXG4gICAgbGV0IGxlbiA9IHRoaXMuZGF0YS5jaGVja2VkVGFncy5sZW5ndGg7XHJcbiAgICBsZXQgY291bnQgPSBNYXRoLnBvdygyLCB0aGlzLmRhdGEuY2hlY2tlZFRhZ3MubGVuZ3RoKTtcclxuICAgIGxldCBjb21icyA9IFtdO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XHJcbiAgICAgIGxldCB0czogW10gPSBbXTtcclxuICAgICAgbGV0IHRzVEw6IFtdID0gW107XHJcbiAgICAgIGZvciAobGV0IGogPSAwLCBtYXNrID0gMTsgaiA8IGxlbjsgaisrKSB7XHJcbiAgICAgICAgaWYgKChpICYgbWFzaykgIT09IDApIHtcclxuICAgICAgICAgIHRzLnB1c2godGhpcy5kYXRhLmNoZWNrZWRUYWdzW2pdKTtcclxuICAgICAgICAgIHRzVEwucHVzaCh0aGlzLmRhdGEuY2hlY2tlZFRhZ3NUTFtqXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1hc2sgPSBtYXNrICogMjtcclxuICAgICAgfVxyXG4gICAgICBjb21icy5wdXNoKHtcclxuICAgICAgICBcInRhZ3NcIjogdHMsXHJcbiAgICAgICAgXCJ0YWdzVExcIjogdHNUTCxcclxuICAgICAgICBcInNjb3JlXCI6IDAuMCxcclxuICAgICAgICBcInBvc3NpYmxlXCI6IFtdXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coY29tYnMpO1xyXG4gICAgbGV0IG9wdFN0YXJzOiBzdHJpbmdbXSA9IHRoaXMuZGF0YS5vcHRTdGFycztcclxuICAgIC8vICQoXCIuYnRuLW9wdFwiKS5lYWNoKGZ1bmN0aW9uIChfLCBfXykge1xyXG4gICAgLy8gICBpZiAoJCh0aGlzKS5hdHRyKFwib3B0LWlkXCIpID09PSBcImFsbFwiIHx8ICQodGhpcykuaGFzQ2xhc3MoXCJidG4tc2Vjb25kYXJ5XCIpKSByZXR1cm47XHJcbiAgICAvLyAgIG9wdFN0YXJzLnB1c2goJCh0aGlzKS5hdHRyKFwib3B0LWlkXCIpKTtcclxuICAgIC8vIH0pO1xyXG4gICAgLy9jb25zb2xlLmxvZyhvcHRTdGFycyk7XHJcbiAgICAvLyQoXCIjdGJvZHktcmVjb21tZW5kXCIpLmh0bWwoXCJcIik7XHJcbiAgICB2YXIgdGhhdCA9IHRoaXM7Ly/miop0aGlz5a+56LGh5aSN5Yi25Yiw5Li05pe25Y+Y6YePdGhhdFxyXG4gICAgY29tYnMuZm9yRWFjaCgoY29tYjogeyBba2V5OiBzdHJpbmddOiBhbnkgfSkgPT4ge1xyXG4gICAgICBsZXQgdGFnczogc3RyaW5nW10gPSBjb21iLnRhZ3M7XHJcbiAgICAgIGlmICh0YWdzLmxlbmd0aCA9PT0gMCB8fCB0YWdzLmxlbmd0aCA+IDMpIHJldHVybjtcclxuICAgICAgLy9AdHMtaWdub3JlIFxyXG4gICAgICBsZXQgY2hhcnM6IEhlcm9CYXNpY1tdID0gWy4uLnRoYXQuZGF0YS50YWdzX2F2YWxbdGFnc1swXV1dOy8v5YiH5Ymy5q+P5Liq5a2X56ymXHJcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGFncy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGxldCByZWR1Y2VkX2NoYXJzOiBIZXJvQmFzaWNbXSA9IFtdO1xyXG5cclxuICAgICAgICBjaGFycy5mb3JFYWNoKChjaGFyOiBIZXJvQmFzaWMpID0+IHtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRhZ3NfYXZhbFt0YWdzW2ldXSk7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhjaGFyKTtcclxuICAgICAgICAgIC8vQHRzLWlnbm9yZSBcclxuICAgICAgICAgIGxldCB0bXA6IEhlcm9CYXNpY1tdID0gdGhhdC5kYXRhLnRhZ3NfYXZhbFt0YWdzW2ldXTtcclxuICAgICAgICAgIC8vQHRzLWlnbm9yZSBcclxuICAgICAgICAgIHRtcC5mb3JFYWNoKCh0Z2NoOiBIZXJvQmFzaWMpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNoYXIubmFtZSA9PT0gdGdjaC5uYW1lKSB7XHJcbiAgICAgICAgICAgICAgcmVkdWNlZF9jaGFycy5wdXNoKGNoYXIpO1xyXG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy9AdHMtaWdub3JlIFxyXG4gICAgICAgIGNoYXJzID0gcmVkdWNlZF9jaGFycztcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGNoYXJzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG4gICAgICAvL0B0cy1pZ25vcmUgXHJcbiAgICAgIGlmICghdGFncy5pbmNsdWRlcyhcIumrmOe6p+i1hOa3seW5suWRmFwiKSkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRhZ3Muam9pbihcIixcIikgKyBcIiDkuI3lkKso6auY57qnKei1hOa3seW5suWRmFwiKTtcclxuICAgICAgICBsZXQgcmVkdWNlNjogYW55W10gPSBbXTtcclxuICAgICAgICBjaGFycy5mb3JFYWNoKGZ1bmN0aW9uIChjaGFyOiBhbnkpIHtcclxuICAgICAgICAgIGlmIChjaGFyLmxldmVsICE9PSA2KSB7XHJcbiAgICAgICAgICAgIHJlZHVjZTYucHVzaChjaGFyKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBjaGFycyA9IHJlZHVjZTY7XHJcbiAgICAgIH1cclxuICAgICAgbGV0IGZpbHRlcmVkX2NoYXJzOiBIZXJvQmFzaWNbXSA9IFtdO1xyXG4gICAgICBjaGFycy5mb3JFYWNoKGZ1bmN0aW9uIChjaGFyOiBIZXJvQmFzaWMpIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKGNoYXIubGV2ZWwpO1xyXG4gICAgICAgIC8vQHRzLWlnbm9yZSBcclxuICAgICAgICBpZiAob3B0U3RhcnMuaW5jbHVkZXMoY2hhci5sZXZlbC50b1N0cmluZygpKSkge1xyXG4gICAgICAgICAgZmlsdGVyZWRfY2hhcnMucHVzaChjaGFyKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICAvL0B0cy1pZ25vcmUgXHJcbiAgICAgIGNoYXJzID0gZmlsdGVyZWRfY2hhcnM7XHJcblxyXG4gICAgICBjb21iLnBvc3NpYmxlID0gY2hhcnM7XHJcbiAgICAgIGlmIChjaGFycy5sZW5ndGggPT09IDApIHJldHVybjtcclxuICAgICAgbGV0IHMgPSAwO1xyXG4gICAgICBjaGFycy5mb3JFYWNoKGZ1bmN0aW9uIChjaGFyOiBhbnkpIHtcclxuICAgICAgICBzICs9IGNoYXIubGV2ZWw7XHJcbiAgICAgIH0pO1xyXG4gICAgICBzID0gcyAvIGNoYXJzLmxlbmd0aDtcclxuICAgICAgY29tYi5zY29yZSA9IHMgKyAwLjEgLyB0YWdzLmxlbmd0aCArIDAuOSAvIGNoYXJzLmxlbmd0aDtcclxuICAgIH0pO1xyXG4gICAgY29tYnMuc29ydChmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICByZXR1cm4gYS5zY29yZSA+IGIuc2NvcmUgPyAtMSA6IChhLnNjb3JlIDwgYi5zY29yZSA/IDEgOlxyXG4gICAgICAgIChhLnRhZ3MubGVuZ3RoID4gYi50YWdzLmxlbmd0aCA/IDEgOiAoYS50YWdzLmxlbmd0aCA8IGIudGFncy5sZW5ndGggPyAtMSA6XHJcbiAgICAgICAgICAwKSkpO1xyXG4gICAgfSk7XHJcbiAgICAvL2xldCBubyA9IDE7XHJcbiAgICAvL0B0cy1pZ25vcmUgXHJcbiAgICBjb21icy5mb3JFYWNoKCAoY29tYjogYW55KT0+IHtcclxuICAgICAgaWYgKCFjb21iLnBvc3NpYmxlIHx8IGNvbWIucG9zc2libGUubGVuZ3RoID09PSAwKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgIFxyXG4gICAgICBjb21iLnBvc3NpYmxlLnNvcnQoZnVuY3Rpb24gKGE6IGFueSwgYjogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGEubGV2ZWwgPiBiLmxldmVsID8gLTEgOiAoYS5sZXZlbCA8IGIubGV2ZWwgPyAxIDogMCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuXHJcbiAgICB9KTtcclxuXHJcblxyXG5cclxuICAgIC8vIGlmIChsYW5nICE9PSAnY24nKSAkKCdbZGF0YS10b2dnbGU9XCJ0b29sdGlwXCJdJykudG9vbHRpcCgpO1xyXG4gICAgLy9odHRwczovL2FrLmdyYXVlbmVrby54eXovYWtoci5qc29uXHJcblxyXG5cclxuICAgIHRoYXQuc2V0RGF0YSEoeyBwb3NzaWJsZTogY29tYnMgfSk7XHJcblxyXG4gIH0sXHJcbiAgaW5pdCgpIHtcclxuICAgIGxldCBfdGhhdCA9IHRoaXM7XHJcblxyXG4gICAgLy9hcHAuZnVuYy5nZXQoJy9ha2hyLmpzb24nLCB7fSwgZnVuY3Rpb24gKGRhdGE6IEhlcm9bXSkge1xyXG4gICAgLy9sZXQgZGF0YTogSGVyb1tdID0ganNvbkRhdGEuZGF0YUxpc3Q7XHJcbiAgICB0aGlzLnNldERhdGEhKHsgb3B0U3RhcnM6IFsn5riF56m6JywgJzYnLCAnNScsICc0JywgJzMnLCAnMicsICcxJ10gfSk7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgIHRoaXMuc2V0RGF0YSEoeyB0YWdzX2F2YWw6IGpzb25EYXRhLmF2YWwgfSlcclxuXHJcblxyXG5cclxuICAgIC8vIGZvciAoY29uc3Qga2V5IGluIGRhdGEpIHtcclxuICAgIC8vICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgLy8gICAgIGNvbnN0IGNoYXIgPSBkYXRhW2tleV07XHJcbiAgICAvLyAgICAgaWYgKGNoYXIuaGlkZGVuKSBjb250aW51ZTtcclxuICAgIC8vICAgICBjaGFyLnRhZ3MhLnB1c2goY2hhci50eXBlICsgXCLlubLlkZhcIik7XHJcbiAgICAvLyAgICAgY2hhci50YWdzIS5wdXNoKGNoYXIuc2V4ICsgXCLmgKflubLlkZhcIik7XHJcbiAgICAvLyAgICAgbGV0IG5hbWUgPSBjaGFyLm5hbWU7XHJcbiAgICAvLyAgICAgY2hhci50YWdzIS5mb3JFYWNoKGZ1bmN0aW9uICh0YWc6IHN0cmluZykge1xyXG4gICAgLy8gICAgICAgaWYgKHRhZyBpbiBfdGhhdC5kYXRhLnRhZ3NfYXZhbCkge1xyXG5cclxuICAgIC8vICAgICAgICAgbGV0IHRtcDogeyBba2V5OiBzdHJpbmddOiBIZXJvQmFzaWNbXSB9ID0gX3RoYXQuZGF0YS50YWdzX2F2YWw7XHJcbiAgICAvLyAgICAgICAgIHRtcFt0YWddLnB1c2goe1xyXG4gICAgLy8gICAgICAgICAgIFwibmFtZVwiOiBuYW1lLFxyXG4gICAgLy8gICAgICAgICAgIFwiaW1nXCI6IGNoYXJbXCJuYW1lLWVuXCJdLFxyXG4gICAgLy8gICAgICAgICAgIFwibGV2ZWxcIjogY2hhci5sZXZlbCxcclxuICAgIC8vICAgICAgICAgICBcInR5cGVcIjogY2hhci50eXBlXHJcbiAgICAvLyAgICAgICAgIH0pO1xyXG5cclxuICAgIC8vICAgICAgICAgX3RoYXQuc2V0RGF0YSEoeyB0YWdzX2F2YWw6IHRtcCB9KVxyXG5cclxuICAgIC8vICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgLy8gICAgICAgICBsZXQgdG1wOiB7IFtrZXk6IHN0cmluZ106IEhlcm9CYXNpY1tdIH0gPSBfdGhhdC5kYXRhLnRhZ3NfYXZhbDtcclxuXHJcbiAgICAvLyAgICAgICAgIHRtcFt0YWddID0gW3tcclxuICAgIC8vICAgICAgICAgICBcIm5hbWVcIjogbmFtZSxcclxuICAgIC8vICAgICAgICAgICBcImltZ1wiOiBjaGFyW1wibmFtZS1lblwiXSxcclxuICAgIC8vICAgICAgICAgICBcImxldmVsXCI6IGNoYXIubGV2ZWwsXHJcbiAgICAvLyAgICAgICAgICAgXCJ0eXBlXCI6IGNoYXIudHlwZVxyXG4gICAgLy8gICAgICAgICB9XTtcclxuXHJcbiAgICAvLyAgICAgICAgIF90aGF0LnNldERhdGEhKHsgdGFnc19hdmFsOiB0bXAgfSlcclxuXHJcbiAgICAvLyAgICAgICB9XHJcblxyXG4gICAgLy8gICAgIH0pO1xyXG5cclxuICAgIC8vICAgfVxyXG4gICAgLy8gfVxyXG5cclxuXHJcbiAgICBfdGhhdC5jYWxjKCk7XHJcbiAgICAvL30pO1xyXG4gIH0sXHJcbiAgY2xpY2tUYWcoZXZlbnQ6IGFueSkge1xyXG4gICAgY29uc29sZS5sb2coZXZlbnQpO1xyXG4gICAgbGV0IHRhZyA9IGV2ZW50LnRhcmdldC5kYXRhc2V0LnRpdGxlO1xyXG4gICAgdGhpcy5jbGlja1RhZ0YodGFnLCB0cnVlKTtcclxuICB9LFxyXG4gIC8vIOaYr+WQpuaYr+eCueWHu+i/m+adpeeahOagh+W/lyx0cnVl55qE5pe25YCZ5omN5Lya5Y675o6J54K55Ye75qCH5b+XXHJcbiAgY2xpY2tUYWdGKHRhZzogc3RyaW5nLCBjbGlja0ZsYWc6IGJvb2xlYW4pIHtcclxuICAgIGxldCBfdGhhdCA9IHRoaXM7XHJcblxyXG4gICAgbGV0IGNoZWNrZWQgPSBmYWxzZTtcclxuXHJcbiAgICBpZiAoIWNsaWNrRmxhZykge1xyXG4gICAgICB0aGlzLmRhdGEudGFncy5mb3JFYWNoKCh0OiBhbnkpID0+IHtcclxuXHJcbiAgICAgICAgdFsnY250YWdzJ10uZm9yRWFjaCgodDI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgaWYgKHQyLm5hbWUgPT09IHRhZyAmJiB0Mi5zaG93RmxhZyA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgdDIuc2hvd0ZsYWcgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kYXRhLnRhZ3MuZm9yRWFjaCgodDogYW55KSA9PiB7XHJcblxyXG4gICAgICAgIHRbJ2NudGFncyddLmZvckVhY2goKHQyOiBhbnkpID0+IHtcclxuICAgICAgICAgIGlmICh0Mi5uYW1lID09PSB0YWcpIHtcclxuICAgICAgICAgICAgdDIuc2hvd0ZsYWcgPSAhdDIuc2hvd0ZsYWc7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgICAvL+aYr+WQpueCuei/h1xyXG4gICAgLy9AdHMtaWdub3JlXHJcbiAgICBpZiAoKF90aGF0LmRhdGEuY2hlY2tlZFRhZ3MpLmluY2x1ZGVzKHRhZykpIHtcclxuICAgICAgY2hlY2tlZCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNoZWNrZWQpIHtcclxuICAgICAgaWYgKGNsaWNrRmxhZykge1xyXG4gICAgICAgIF90aGF0LmRhdGEuY2hlY2tlZFRhZ3MgPSBfdGhhdC5kYXRhLmNoZWNrZWRUYWdzLmZpbHRlcihmdW5jdGlvbiAodiwgXywgX18pIHtcclxuICAgICAgICAgIHJldHVybiB2ICE9PSB0YWc7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIF90aGF0LnNldERhdGEhKHtcclxuICAgICAgICAgIGNoZWNrZWRUYWdzOiBfdGhhdC5kYXRhLmNoZWNrZWRUYWdzXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChfdGhhdC5kYXRhLmNoZWNrZWRUYWdzLmxlbmd0aCA+PSA2KSB7XHJcblxyXG4gICAgICAgIHd4LnNob3dUb2FzdCh7XHJcbiAgICAgICAgICB0aXRsZTogXCLml6Dms5XpgInmi6nmm7TlpJrmoIfnrb7vvJrmnIDlpJo25Liq44CCXCIsXHJcbiAgICAgICAgICBpY29uOiBcIm5vbmVcIixcclxuICAgICAgICAgIGR1cmF0aW9uOiAyMDAwXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy9hbGVydChcIuaXoOazlemAieaLqeabtOWkmuagh+etvu+8muacgOWkmjbkuKrjgIJcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vQHRzLWlnbm9yZVxyXG4gICAgICAgIF90aGF0LmRhdGEuY2hlY2tlZFRhZ3MucHVzaCh0YWcpO1xyXG4gICAgICAgIF90aGF0LnNldERhdGEhKHtcclxuICAgICAgICAgIGNoZWNrZWRUYWdzOiBfdGhhdC5kYXRhLmNoZWNrZWRUYWdzXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBfdGhhdC5zZXREYXRhISh7IHRhZ3M6IF90aGF0LmRhdGEudGFncyB9KTtcclxuXHJcbiAgICAvLyQodGhpcykudG9nZ2xlQ2xhc3MoXCJidG4tcHJpbWFyeSBidG4tc2Vjb25kYXJ5XCIpO1xyXG4gICAgX3RoYXQuY2FsYygpO1xyXG5cclxuXHJcbiAgfVxyXG5cclxufSkiXX0=